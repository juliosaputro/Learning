const materiempat = [
  {
    id: "1",
    bab: "Bab 4",
    judul: "Arithmetic Logic Unit ( ALU )",
    des1: "\t\tALU (Arithmetic Logic Unit) adalah salah satu bagian dari sebuah mikroprosesor yang berfungsi untuk melakukan operasi hitungan aritmetika dan logika. Contoh operasi aritmetika adalah operasi penjumlahan dan pengurangan, sedangkan contoh operasi logika adalah logika AND dan OR.\nTugas utama dari ALU adalah melakukan semua perhitungan anitmetika yang terjadi sesuai dengan instruksi program. ALU melakukan operasi aritmetika dengan dasar pertambahan, sedang operasi aritmetika yang Iainnya seperti pengurangan, perkalian, dan pembagian, dilakukan dengan dasar penjumlahan. Karena itu, sirkuit elektronik di ALU yang digunakan untuk melaksanakan operasi aritmetika ini disebut adder. Tugas lain dari ALU adalah melakukan keputusan dan operasi logika sesuai dengan instruksi program. Operasi logika (logical operation) meliputi perbandingan dua buah elemen logika dengan menggunakan operator logika, yaitu:\n\n1.\tsama dengan (=)\n2.\ttidak sama deugan (<>)\n3.\tkurang dari (< )\n4.\tkurang atau sama dengan dari ,(<=)\n5.\tIebih besar dari (>)\n\nRangkaian pada ALU yang digunakan untuk menjumlahkan bilangan dinamakan dengan Adder.Adder digunakan untuk memproses operasi aritmetika. Adder juga disebut rangkaian kombinasional aritmetika. Ada 3 jenis adder:\n\n1.\tRangkaian Adder dengan menjumlahkan dua bit disebut Half Adder.\n2.\tRangkaian Adder dengan menjumlahkan tiga bit disebut Full Adder.\n3.\tRangkaian Adder dengan menjumlahkan banyak bit disebut Parallel Adder.\n",
  },
  {
    id: "2",
    bab: "Bab 4",
    judul: "Rangkaian Half Adder",
    des1: "\t\tHalf adder adalah suatu rangkaian penjumlahan sistem bilangan biner yang  paling sederhana. Rangkaian ini hanya dapat digunakan untuk operasi penjumlahan data bilangan biner sampai 1 bit saja. Rangkaian Half Adder memiliki 2 terminal input untuk 2 variabel bilangan biner dan 2 terminal output, yaitu summary out (SUM) dan carry out (CARRY).\nHalf Adder (HA) adalah rangkaian penjumlahan sistem bilangan biner yang paling sederhana. Rangkaian ini hanya dapat digunakan untuk melakukan operasi penjumlahan dua bilangan biner 1 bit. Rangkaian half adder memiliki dua terminal input untuk 2 variabel bilangan biner dan 2 terminal output, yaitu summary out (sum) dan carry out (carry). Aturan-aturan untuk melakukan penambahan biner dua bit diilustrasikan sebagai berikut:\nAturan 1\t0 + 0 = 0\nAturan 2\t0 + 1 = 1\nAturan 3\t1 + 0 = 1\nAturan 4\t1 + 1 = 0 dan carry 1 = 10\n\nTiga aturan pertama mudah dimngerti, sedangkan aturan 4 menyatakan bahwa penjumlahan biner 1 + 1 = 10 (desimal 2). Angka 1 hasil penjumlahan dibawa ke kolom yang mempunyai tingkatan lebih tinggi, dan dikatakan terdapat carry.\nRancangan diagram logika menggunakan XOR dan AND, masukan diberikan simbol A dan B sedangkan keluaran diberi simbol ∑ yang berarti jumlah (SUM) dan Simbol Co berarti bawaan keluar (Carry Out). Diagram logika dan penambahan setengah (half adder) dengan input A dan B, simbol half adder dan tabel kebenaran diberikan pada gambar berikut.\n",
    des2:"\nGambar 4.1. Rangkaian Half Adder",
    caption2:"\n\t\tTabel 4.1.Kebenaran Half Adder",
    des3:"\t\t",
    des4:"",
    tabel: require("../../src/assets/materi/bab4/4.1.1.jpg"),
    gambar1:require("../../src/assets/materi/bab4/4.1.jpg"),
  },
  {
    id: "3",
    bab: "Bab 4",
    judul: "Rangkaian Full Adder",
    des1: "\t\tFull Adder adalah rangkaian elekronik yang bekerja melakukan perhitungan penjumlahan penuhdari dua buah bilangan biner yang masing-masing terdiri dari satu bit. Rangkaian ini memiliki 3input dan 2 output, salah satu input merupakan nilai dari pindahan penjumlahan, kemudian sama seperti pada hafl adder salah satu outputnya dipakai sebagai tempat nilai pindahan dan yang lain sebagai hasil dari penjumlahan.\nRangkaian full adder (FA) dapat digunakan untuk menjumlahkan bilangan biner yang lebih dari 1 bit. Rangkaian Full Adder dapat dibentuk oleh gabungan 2 buah rangkaian half adder dan sebuah gerbang OR untuk menjumlahkan carry output. Pada penambahan penuh muncul aturan kelima yang menyatakan suatu penjumlahan setengah tidak akan bekerja bila muncul carry-in. Oleh karena itu penambahan penuh mempunyai tiga masukan yaitu A, B dan C-in, sedangkan keluaran adalah SUM dan Co (carry out). Diagram logika dari full adder dan tabel kebenaran disajikan pada gambar berikut, untuk simulasi bisa digunakan software electronic workbench.\n",
    des2:"\nGambar 4.2. Rangkaian Full Adder ",
    caption2:"\n\t\tTabel 4.2. Kebenaran Full Adder",
    des3:"\n\t\tGambar 4.4 Rangkaian Penjumlah 4 Bit (Purwanto, 2011, hal. 133)",
    gambar1:require('../../src/assets/materi/bab4/4.2.jpg'),
    tabel:require('../../src/assets/materi/bab4/4.2.1.jpg'),
    tabel1:require('../../src/assets/materi/bab4/4.3.jpg'),
  },
  {
    id: "4",
    bab: "bab 4",
    judul: "Rangkaian Penjumlahan dan Pengurangan (Ripple Carry Adder)",
    des1:"\n\t\tA.\tPenjumlahan\n\nALU tidak memproses bilangan desimal melainkan bilangan biner. Sebelum dapat memahamirangkaian-rangkaian di dalam sebuah ALU kita harus mempelajari bagaimana penjumlah bilangan biner itu dilaksanakan.\nAda lima aturan penjumlahan yang harus diingat, yaitu:\n0 + 0\t= 0\n0 + 1\t= 1\n1 + 0\t= 1\n1 + 1\t= 0 / + 1 sebagai simpanan (carry)\n1 + 1 + 1\t= 1 / + 1 sebagai simpanan\nUntuk bilangan biner yang lebih besar, sebagaimana halnya dalam bilangan desimal, penjumlahan biner juga dilakukan kolom demi kolom.\n\nContoh:\n11011\n11010\n \t+\n?\n\nKita mulai dari kolom yang bernilai kecil (least sigfinicant bit) sehingga:\n11011\n11010\n \t\t+ 1\n\nBerikutnya jumlahkan bit-bit kolom kedua, ketiga dan keempat sebagai berikut.\n11011\n11010\n \t+ 111111\n\nContoh\nJumlahkan bilangan biner 01010111 dan 00110101! Jawaban:\n \n\n01010111\n00110101\n \t+ 10001100\n",
  },
  {
    id: "5",
    bab: "bab 4",
    judul: "Rangkaian Penjumlahan dan Pengurangan (Ripple Carry Adder)",
    des1:"\n\t\tB.\tPengurangan\nUntuk mengurangkan bilangan biner diberlakukan aturan sebagai berikut. 0 - 0\t= 0\n1 - 0\t= 1\n1 - 1\t= 0\n0 - 1\t= 1\nUntuk pengurangan bilangan biner yang lebih besar dapat dilakukan dengan cara berikut.\nContoh:\n111\n101\n \t - 010\nDari kolom paling kanan, 1 - 1 = 0, kemudian 1 - 0 - 1 dan akhirnya 1 - 1 = 0\n1101\n1010\n \t- 0011\n\nDalam kolom bernilal kecil (Least Sigfinicant Bit), 1 - 0 = 1, pada kolom kedua kita harusmeminjam dan kolom berikutnya sehingga 10 -1 = 1. Pada kolom ketiga menjadi 0 - 0 = 0 dan kolom keempat 1 — 1 = 0. Pengurangan Iangsung seperti contoh di atas telah diterapkan dalam operasi komputer. Namun pengurangan dapat pula dilakukan dengan cara berbeda yang akan dibahas juga di bab ini.\n",
    des2:"\n\t\t",
    des3:"\n\t\tDengan sifat yang demikian, maka dapat disimpulkan bahwa output dari gerbang NOT selalu berlawanan dengan inputnya. Jadi dapat disimpulkan bahwa NOT di NOT-kan lagi akan kembali ke kondisi semula (kondisi sama dengan input). Secara aljabar Boolean dapat ditulis: Y = A‘ = A\n",
    image: require("../../src/assets/book.png"),
    tabel:require("../../src/assets/materi/bab2/gambarC1.1.jpg"),
  },
  {
    id: "6",
    bab: "bab 4",
    judul: "Transistor-Transistor Logic ",
    des1:"\n\t\tA. Tansistor-Transistor Logic ( TTL )\nTransistor-Transistor Logic (TTL) adalah salah satu teknologi IC yang paling hanyak digunakansecara luas saat ini. TTL adalah IC digital yang digunakan untuk peralatan komputer, kalkulatordan sistem kontrol elektronik. IC digital bekerja dengan dasar pengoperasian bilangan Biner logic (bilangan dasar 2), yaitu hanya mengenal dua kondisi saja 1(on) dan 0 (off). Jenis IC digital terdapat 2 (dua) jenis, yaitu TTL dan CMOS. Jenis IC- TTL. dibangun dengan menggunakan transistor sebagai komponen utamanya dan fungsinya digunakan untuk berbagai variasi Logic, sehingga dinamakan Transistor- Transistor Logic. Dalam satu kemasan IC terdapat beberapa macam gate (gerbang) yang dapat melakukan berbagai macam fungsi logic seperti AND, NAND, OR, NOR, XOR serta beberapa fungsi logika lainnya seperti Decoder, Encoder, Multiplexer, dan Memory sehingga pin (kaki) IC jumlahnya banyak dan bervariasi ; ada yang berkaki 8, 14, 16, 24, dan 40.\n",
    des2:"\n\t\tGambar 4.7Two Input TTL",
    des3:"\n\t\tSemua mikroprosesor tidak hanya mampu melaksanakan operasi-operasi aritmetika saja, tetapijuga mampu melaksanakan operasi-operasi logika. Kedua operasi ini dilaksanakan di dalam Aritmatic Logic Unit (ALU) yang terdapat pada seluruh mikroprosesor. Ada tiga dasar operasi logika yaltu,\nA ˄ B (Operasi AND) A ˅ B (Operasi OR)\nA ˅B (Operasi EX-OR)\nKeluaran dan ALU diatur oleh kombinasi input pengontrol tambahan S5 dan S6 seperti tabelberikut ini.\n\n\t\tTabel 4.3 Fungsi PengontroLan Input Output ALU",
    tabel:require("../../src/assets/materi/bab4/4.4.jpg"),
    tabel1:require("../../src/assets/materi/bab4/4.5.jpg"),
  },
];

export default materiempat;
