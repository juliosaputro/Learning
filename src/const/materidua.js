const materidua = [
  {
    id: "1",
    bab: "Bab 2",
    judul: "Relasi Logik",
    des1: "\t\tRelasi logik adalah informasi dalam bentuk sinyal 0 dan 1 yang digunakan untuk membandingkan dua buah nilai dan saling memberikan kemungkinan hubungan secara logik, 0 berarti salah dan 1 berarti benar. Fungsi dasar relasi logik adalah fungsi AND, OR, dan Fungsi NOT. Logika yang digunakan: \n",
    des2:"\n\n\t\tTabel 2.1 Simbol Relasi logik\n",
    tabel: require("../../src/assets/materi/bab2/relasilogik.jpg"),
  },
  {
    id: "2",
    bab: "Bab 2",
    judul: "Operasi Logik",
    des1: "\t\tOperator logika adalah operator yang digunakan untuk membandingkan dua buah nilai logika. Nilai logika adalah nilai benar atau salah. Jika sebelumnya pada relasi Logik yang dibandingkan adalah nilai dari data apakah benar (1) ataukah salah (0), maka pada operator logika bisa dikatakan yang dibandingkan adalah logika hasil dari relasi logik. Memberikan batasan yang pasti dari suatu keadaan sehingga suatu keadaan tidak dapat berada dalam dua ketentuan sekaligus. Dalam logikadikenal aturan sebagai berikut.\n \n1.\tSuatu keadaan tidak dapat dalam keduanya benar dan salah sekaligus.\n2.\tMasing-masing adalah benar/salah.\n3.\tSuatu keadaan disebut benar bila tidak salah.\n\nDalam aljabar Boolean keadaan ini ditunjukkan dengan dua konstanta: Logika ‗1‘ dan ‗0‘. Operasi logika biasa digunakan untuk menghubungkan dua buah ungkapan kondisi menjadi sebuah ungkapan kondisi. Operator-operator ini berupa:\n",
    des2:"\n\t\tTabel 2.3 Operator Logika",
    des3:"\t\tContoh penggunaan:",
    des4:"\n\t\tTabel 2.4 Penggunaan Operator Logika",
    image: require("../../src/assets/book.png"),
    tabel:require("../../src/assets/materi/bab2/operatorlogika.jpg"),
    tabel2:require("../../src/assets/materi/bab2/POL.jpg"),
  },
  {
    id: "3",
    bab: "Bab 2",
    judul: "Fungsi Gerbang Dasar ",
    des1: "\t\tGerbang logika adalah rangkaian dasar yang membentuk komputer jutaan transistor di dalam mikroprosesor membentuk ribuan gerbang logika. gerbang logika beroperasi pada bilangan biner sehingga, disebut juga gerbang logika biner. Gerbang logika beroperasi pada bilangan biner 1 (high) dan 0 (low). Gerbang logika digunakan dalam berbagai rangkaian elektronik dengan sistem digital.\nGerbang dasar logika terdiri dan :\n\n1.\tGerbang AND,\n2.\tGerbang OR, dan\n3.\tGerbang NOT.\n\n\nA.\tFungsi Gerbang Gate ( Gerbang AND )\n\n(referensi Teori dan Aplikasi Sistem Digital, Graha Ilmu, hal 17)\nGerbang AND disebut juga sebagai gerbang ―semua atau tidak satupun‖. Bagan pada gambar memberikan gambaran tentang prinsip kerja gerbang AND. Lampu Y akan menyala hanya apabila kedua saklar masukan (A dan B) tertutup. Dalam sistem logika keadaan saklar tertutup diberikan dengan logika 1, saklar terbuka diberikan dengan logika\n0. Semua kombinasi saklar A dan B dalam sistem digital diberikan pada tabel kebenaran (truth table).\n\n",
    des2:"\n\t\tGambar 1.1 Siklus Pengolahan Data",
    des3:"\t\t0 didefinisikan sebagai suatu tegangan rendah atau tegangan tanah 1 didefinisikan sebagai tegangan tinggi (max + 5 V).\n\nSimbol logika standar untuk gerbang AND diatas menunjukkan gerbang dengan dua input dan satu output Y. Input ditunjukkan dengan binery digit (bit) yaitu satuan terkecil dalam sistem digital. Permasalahan penting yang perlu diperhatikan bahwa output Y akan mempunyai kondisi 1 jika semua input dalam kondisi 1.\nAljabar boolean merupakan bentuk logika simbolik yang menunjukkan bagaimana gerbang-gerbang logika beroperasi. Pernyataan Bollean merupakan suatu metode penulisan untuk menunjukkan apa yang terjadi di dalam rangkaian logika. Pernyataan dalam aljabar Boolean untuk gerbang AND adalah:\nA * B = Y\nPernyataan Boolean tersebut dibaca sebagai A AND B sama dengan output Y. Tanda titik dalam aljabar Boolean mempunyai arti AND dan bukan sebagai tanda kali seperti pada aljabar biasa.Aturan-aturan aljabar Boolean mengatur bagaimana gerbang AND akan beroperasi. Aturan formal untuk fungsi AND adalah:\n\nA . 0 = 0 A . 1 = A A . A = A\nA . Ā‘ = 0, di mana Ā‘ = bukan A = NOT A\n\nGerbang AND tiga input disimbolkan dengan gambar dibawah ini\n",
    des4:"\n\t\tAljabar Boolean tersebut dapat dibaca A AND B AND C sama dengan output Y. Ini memberikan arti bahwa jika salah satu dari input pada kondisi 0 maka outpu akan sama dengan 0. Sehingga ketentuan di atas bahwa gerbang gerbang akan mempunyai output 1 jika semua input dalam kondisi 1 dapat dipenuhi. Tabel kebenaran gerbang AND dengan tiga input adalah sebagai berikut:\n",
    des5:"",
    des6:"Aturan-aturan tersebut merupakan aturan umum aljabar Boolean untuk gerbang AND dengan 3 input atau lebih. Jadi untuk gerbang AND berapapun jumlah input yang diberikan, output akan berada dalam kondisi 1, jika semua input dalam kondisi 1. Dalam praktikum dengan menggunakan perangkat lunak electronics work bench input maksimum yang dapat diberikan sebanyak 8 input.",
    tabel:require('../../src/assets/materi/bab2/tabel2.5.jpg'),
    tabel1:require('../../src/assets/materi/bab2/tabel2.6.jpg'),
    tabel2:require('../../src/assets/materi/bab2/tabel2.7.jpg'),
  },
  {
    id: "4",
    bab: "bab 2",
    judul: "Fungsi OR Gate ( Gerbang OR )",
    des1:"\n\t\tDari sistem saklar di atas terlihat bahwa lampu akan menyala jika salah satu dari saklar menutup. Dalam hal ini bisa dijelaskan secara electronic bahwa aruslistrik dapat mengalir melalui saklar yang tertutup tersebut.\nAljabar Boolean untuk gerbang OR dapat dituliskan sebagai berikut:\n\nA + 0 = 1\nA + 1 = 1 A + A = A A + Ā‘ = 1\nSimbol gerbang OR dan tabel kebenarannya adalah sebagai berikut:\n",
    des2:"\n\t\t",
    des3:"\n\t\tDari uraian di atas dapat diambil kesimpulan bahwa output gerbang OR akan berharga 1, jika salah satu atau lebih inputnya bernilai 1. Kesimpulan ini berlaku juga untuk gerbang OR dengan input lebih dari 3.\n",
    gambar:require("../../src/assets/materi/bab2/tabelB1.jpg"),
    tabel:require("../../src/assets/materi/bab2/gambarB1.2.jpg"),
  },
  {
    id: "5",
    bab: "bab 2",
    judul: "Fungsi NOT Gate ( Gerbang NOT ) atau inverter",
    des1:"\n\t\tGerbang NOT atau inverter merupakan gerbang yang berfungsi untuk membalikkan kondisi input. Jika input dalam kondisi 1 maka output akan mempunyai kondisi 0.\nSebaliknya jika input dalam keadaan 0 maka output akan berada dalam kondisi 1. Simbol gerbang NOT adalah:\n",
    des2:"\n\t\t",
    des3:"\n\t\tDengan sifat yang demikian, maka dapat disimpulkan bahwa output dari gerbang NOT selalu berlawanan dengan inputnya. Jadi dapat disimpulkan bahwa NOT di NOT-kan lagi akan kembali ke kondisi semula (kondisi sama dengan input). Secara aljabar Boolean dapat ditulis: Y = A‘ = A\n",
    image: require("../../src/assets/book.png"),
    tabel:require("../../src/assets/materi/bab2/gambarC1.1.jpg"),
  },
  {
    id: "6",
    bab: "bab 2",
    judul: "Fungsi Gerbang Kombinasi",
    des1:"\n\t\tA.	Fungsi Gerbang Kombinasi ( NAND, EX-OR)\n Gerbang NAND merupakan kombinasi dan gerbang AND dengan gerbang NOT di mana keluaran gerbang AND dihubungkan ke saluran masukan dan gerbang NOT. Prinsip kerja dari gerbang NAND merupakan kebalikan dari gerbang AND. Outputnya merupakan kebalikan dari gerbang AND, yakni memberikan keadaan level logik 0 pada outputnya jika dan hanya jika keadaan semua inputnya berlogika 1. Gerbang NAND merupakan gabungan dari NOR dan AND digambarkan sebagai berikut.",
    des2:"\n\t\t",
    des3:"\n\t\tKarakteristiknya: Jika A dan B input sedangkan Y adalah output, maka output gerbang NAND akan berlogika 1 jika salah satu inputnya berlogika 0. Output akan berlogika 0 jika kedua inputnya berlogika 1. Output gerbang NAND adalah kebalikan output gerbang AND.",
    des6:"Gerbang NAND bisa mempunyai Iebih dari dua input. Tabel kebenaran untuk 3 input gerbang NAND memperlihatkan output akan selalu 1 jika kedua input A, B, dan C tidak 1. Gambar dibawah ini memperlihatkan contoh IC gerbang NAND 7400 dengan input.",
    tabel:require("../../src/assets/materi/bab2/gambar2.4.1.jpg"),
    tabel2:require("../../src/assets/materi/bab2/gambar2.4.2.jpg"),
    tabel3:require("../../src/assets/materi/bab2/gambar2.4.3.jpg"),
  },
  {
    id: "7",
    bab: "bab 2",
    judul: "Fungsi Gerbang NOR ( NOT OR )",
    des1:"\n\t\tOperasi gerbang NOR sama seperti dengan gerbang OR, tetapi bedanya keluarannya diinverterkan (dibalikkan). Disini Anda dapat membedakan gerbang NOR dan gerbang OR dengan membedakan outputnya. Simbol untuk gerbang NOR ini seperti dengan OR-Inverter, simbol diperlihatkan pada Gambar dibawah ini :\n",
    des2:"\n\t\t",
    des3:"\n\t\tSimbol gerbang NOR ini serupa dengan OR-Inverter dengan A = O, B = O akan menghasilkan output 1. Persamaan boolean untuk fungsi NOR adalah Y = A + B dengan kata lain Y akan bernilai 0 bila A atau B = 1.",
    tabel:require("../../src/assets/materi/bab2/gambar2.4.4.jpg"),
  },
  {
    id: "8",
    bab: "bab 2",
    judul: "Fungsi EX – OR Gate ( Gerbang EX-OR )",
    des1:"\n\t\tEX-OR singkatan dan Exclusive OR di mana jika input berlogika sama maka output akan berlogika 0 dan sebaliknya jika input berlogika beda maka output akan berlogika Rangkaian EX-OR disusun dengan menggunakan gerbang AND, OR, dan NOT.",
    des2:"\n\t\t",
    des3:"\n\t\t",
    tabel:require("../../src/assets/materi/bab2/gambar2.4.5.jpg"),
  },
  {
    id: "9",
    bab: "bab 2",
    judul: "Fungsi EX-NOR",
    des1:"\n\t\tGerbang EX-NOR akan memberikan output berlogika 0 jika inputnya berlogika beda, dan akan berlogika 1 jika kedua Inputnya berlogika sama. Rangkaian EX-NOR disusun dengan menggunakan gerbang AND, OR, NOT.",
    des2:"\n\t\t",
    des3:"\n\t\tTabel kebenaran EX-NOR memberikan keluaran 1 apabila kedua inputnya sama dan akan memberikan keluaran 0 apabila kedua inputnya berbeda.\n",
    image: require("../../src/assets/book.png"),
    tabel:require("../../src/assets/materi/bab2/gambar2.4.6.jpg"),
    tabel1:require("../../src/assets/materi/bab2/gambar2.4.7.jpg"),
  },
  // {
  //   id: "10",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Desimal ke Sistem Bilangan Oktal",
  //   des1:"\n\t\tUntuk mengkonversikan bilangan desimal kebilangan oktaI dapat dipergunakan remainder method dengan pembaginya adalah basis dari bilangan oktal tersebut, yaitu 8. Misalnya bilangan desimal 385, dalam bilangan oktal bernilai:",
  //   des2:"\n\t\t",
  //   des3:"\n\t\t",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/destooctal.jpg"),
  // },
  // {
  //   id: "11",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Desimal ke Sistem Bilangan Heksadesimal",
  //   des1:"\n\t\tDengan menggunakan remainder method, dengan pembaginya adalah basis dari bilangan heksadesimal, yaitu 16, maka bilangan desimal dapat dikonversikan ke bilangan heksadesimal. ",
  //   des2:"\n\t\t",
  //   des3:"\n\t\t",
  //   des4:"\n\t\t",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/destoheksa.jpg"),
  // },
  // {
  //   id: "12",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Biner ke Sistem Bilangan Desimal",
  //   des1:"\n\t\tDari bilangan biner dapat dikonversikan ke bilangan desimal dengan cara mengalikan masing - masing bit dalam bilangan dengan nilai tempatnya.",
  //   des2:"t",
  //   des3:"",
  //   des4:"",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/binertodes.jpg"),
  // },
  // {
  //   id: "13",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Biner ke Sistem Bilangan Oktal",
  //   des1:"\n\t\tKonversi dari bilangan biner ke bilangan oktal dapat dilakukan dengan mengkonversikan tiap- tiap tiga buah digit biner. Misalnya, bilangan biner 11010100 dapat dikonversikan ke oktal dengan cara :\n\n11 / 3\t\t 010 / 2\t\t100 / 4\n\nHubungan ini dapat dilihat pada tabel dibawah ini.\n",
  //   des2:"\n\t\tTabel 1.7 Konversi Bilangan Oktal",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/bintooctal.jpg"),
  // },
  // {
  //   id: "14",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Biner ke Sistem Bilangan Heksadesimal",
  //   des1:"\n\t\tKonversi dari bilangan biner ke bilangan heksadesimal dapat dilakukan dengan mengkonversikan tiap-tiap empat buah digit biner.Misalnya bilangan biner 11010100 dapat dikonversikan ke bilangan heksadesimal dengan cara\n\n1101/D\t\t 0100/4\n\nHubungan ini dapat dilihat pada tabel berikut.\n",
  //   des2:"\n\t\tTabel 1.8 Konversi bit bilangan Heksadesimal",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/bintoheksa.jpg"),
  // },
  // {
  //   id: "15",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Oktal ke Sistem Bilangan Desimal",
  //   des1:"\n\t\tBilangan oktal dapat dikonversikan ke bilangan desimal dengan cara mengalikan masing-masing bit dalam bilangan dengan nilai tempatnya.",
  //   des2:"\n\n\t\t",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/octaltodes.jpg"),
  // },
  // {
  //   id: "16",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Oktal ke Sistem Bilangan Biner",
  //   des1:"\n\t\tKonversi dan bilangan oktal ke bilangan biner dapat dilakukan dengan mengkonversikanmasing-masing digit oktal ke 3 digit biner, sebagai berikut.",
  //   des2:"\n\t\t",
  //   des3:"\n\n\n\t\t",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/octaltobiner.jpg"),
  // },
  // {
  //   id: "17",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Oktal ke Sistem Bilangan Heksadesimal",
  //   des1:"\n\t\tKonversi dan bilangan oktal ke bilangan heksadesimal dapat dilakukan dengan cara mengubah dari bilangan oktal menjadi bilangan biner terlebih dahulu, kemudian dikonversikan kebilanganheksadesimal. Misalnya, bilangan oktal 2537, akan dikonversikan ke heksadesimal, dengan langkah-langkahberikut ini.",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/octaltoheksa.jpg"),
  // },
  // {
  //   id: "18",
  //   bab: "bab 2",
  //   judul: "Konversi Bilangan Heksadesimal ke Sistem Bilangan Desimal",
  //   des1:"\n\t\tDari bilangan heksadesimal dapat dikonversikan ke bilangan desimal dengan cara mengalikanmasing-masing digit bilangan dengan nilai tempatnya.",
  //   des2:"\n\t\t",
  //   des3:"\n\t\tUntuk mengkonversikan bilangan heksadesimal ke bilangan desimal, dapat dengan bantuan table berikut.\n\nTabel 1.9 Hubungan nilai heksadesimal di posisi tertentu dengan nilai desimal",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/heksatodes.jpg"),
  //   tabel1:require("../../src/assets/materi/heksatodes1.jpg"),
  // },
  // {
  //   id: "19",
  //   bab: "bab 2",
  //   judul:"Konversi Bilangan Heksadesimal ke Sistem Bilangan Biner",
  //   des1:"\n\t\tKonversi dan hilangan heksadesimal ke sistem bilangan biner dapat dilakukan denganmengkonversikan masing-masing digit heksadesimal ke 4 digit biner sebagai berikut.",
  //   des2:"\n\t\t",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/heksatobiner.jpg"),
  // },
  // {
  //   id: "20",
  //   bab: "bab 2",
  //   judul:"Konversi Bilangan Heksadesimal ke Sistem Bilangan Oktal",
  //   des1:"\n\t\tKonversi dan bilangan heksadesimal ke bilangan oktal dapat dilakukan dengan cara mengubah dari bilangan heksadesimal menjadi bilangan biner terlebih dahulu, baru dikonversikan ke bilangan oktal.Misalnya bilangan heksadesimal 55F, akan dikonversikan ke oktal dengan Iangkah-Iangkah:",
  //   des2:"\n\t\t",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/heksatooctal.jpg"),
  // },
  // {
  //   id: "21",
  //   bab: "bab 2",
  //   judul: "Bentuk BCD ( Binary Coded Decimal)",
  //   des1:"\n\t\tBCD merupakan sistem sandi dengan 6 bit, sehingga kombinasi yang dapat digunakan sebagai sandi banyaknya adalah 2 pangkat 6 sama dengan 64 kombinasi. Pada transmisi sinkron sebuah karakter dibutuhkan 9 bit, yang terdiri dari 1 bit awal, 6 bit data, 1 bit paritas dan 1 bit akhir. (Kristanto, 2003, hal. 97)\n\n\t\tBCD (Binary Coded Decimal) merupakan kode biner yang digunakan hanya untuk mewakili nilai digit desimal saja, yaitu nilai angka 0 sampai dengan 9. BCD menggunakan kombinasi dari 4 bit, sehingga sebanyak 16 (24 = 16) kemungkinan kombinasi yang bisa diperoleh dan hanya 10 kombinasi yang digunakan.\n",
  //   des2:"\n\t\tTabel 1.10 BCD 4-bit",
  //   des3:"\n\t\tBilangan desimal pada setiap tempat dapat terdiri dari 10 bilangan yang berbeda- beda. Untuk bilangan biner, bentuk dari 10 elemen yang berbeda-beda memerlukan 4 bit. Sebuah BCD mempunyai 4 bit biner untuk setiap tempat bilangan desimal.",
  //   des4:"\n\t\tDalam contoh ini BCD terdiri dan 3 kelompok bilangan masing-masing terdiri dari 4 bit, dan jika bilangan desimal tersebut dikonversi ke dalam bilangan biner secara langsung adalah 31710 = 1001111012 dan hanya memerlukan 9 bit. Untuk contoh proses sebaliknya dapat dilihat di bawah ini.",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/bcd.jpg"),
  //   tabel1:require("../../src/assets/materi/bcd1.jpg"),
  //   tabel2:require("../../src/assets/materi/bcd2.jpg"),
  // },
  // {
  //   id: "22",
  //   bab: "bab 2",
  //   judul:"Bentuk BCH ( Binary Coded Hexadecimal)",
  //   des1:"\n\t\tBilangan heksadesimal dalam setiap tempat dapat terdiri dari 16 bilangan yang berbeda-beda angka dan huruf. Bentuk biner untuk 16 elemen memerlukan 4 bit.",
  //   des2:"\n\t\tTabel 1.11 BCH",
  //   des3:"\t\tSebuah BCH mempunyai 4 bit biner untuk setiap tempat bilangan heksadesimal.",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/bch.jpg"),
  //   tabel1:require("../../src/assets/materi/bch1.jpg"),
  // },
  // {
  //   id: "23",
  //   bab: "bab 2",
  //   judul:"ASCII Code-American Standard Code-for Information Interchange",
  //   des1:"\n\t\tDalam bidang komputer mikro, ASCII Code mempunyai arti yang sangat khusus, yaitu untuk mengkodekan karakter (huruf, angka, dan tanda baca yang Iainnya). Kode- kode ini merupakan kode standar yang dipakai oleh sebagian besar sistem komputer mikro. Selain huruf, angka dan tanda baca yang terdiri dari 32 karakter (contoh: ACK, NAK), ASCII Code merupakan kontrol untuk keperluan transportasi data. Di bawah ini adalah tabel 7 bit ASCII Code beserta beberapa penjelasan yang diperlukan.",
  //   des2:"\n\t\tTabel 1.12ACII Code 7 bit",
  //   des3:"\t\tASCII merupakan sandi 7 bit, sehingga terdapat 2 pangkat 7 yang berarti ada 128 macam simbol yang dapat disandikan dengan sistem sandi ini, sedangkan bit ke 8 merupakan bit paritas. Sandi ini dapat dikatakan yang paling banyak dipakai sebagai standard pensinyalan pada peralatan komunikasi data. Untuk transmisi asinkron tiap karakter disandikan dalam 10 atau 11 bit yang terdiri dari 1 bit awal, 7 bit data, 1 bit paritas, 1 atau 2 bit akhir.\n\nTabel 1.13 Sandi ASCII",
  //   image: require("../../src/assets/book.png"),
  //   tabel:require("../../src/assets/materi/ascii.jpg"),
  //   tabel1:require("../../src/assets/materi/ascii2.jpg"),
  // },
];

export default materidua;
